% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gbif_keys.R
\name{get_gbif_keys}
\alias{get_gbif_keys}
\title{Retrieve GBIF Taxon keys for species}
\usage{
get_gbif_keys(
  species,
  strict = TRUE,
  try_fuzzy = FALSE,
  try_names = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{species}{a \code{character} vector containing species names or a
\code{numeric} vector containing AphiaIDs (which will be converted to
names) or a \code{data.frame} containing a column with species name (it
should be named 'scientificName') and alternatively other columns with
additional information (see details).}

\item{strict}{if \code{TRUE}, it matches only the given name and never an
upper classification.}

\item{try_fuzzy}{if \code{TRUE}, it will also include names that the match
was of the type "fuzzy" (see details on \code{\link[rgbif:name_backbone]{rgbif::name_backbone()}}).
Otherwise (default), only exact matches are accepted.}

\item{try_names}{if \code{TRUE}, in case a name is not matched by including
the full taxonomic name (i.e. species name + authorship), a second trial is
done on the unmatched names using only species name.}

\item{verbose}{if \code{TRUE}, messages are printed.}
}
\value{
matched names with usage keys or a list with matched and unmatched
names
}
\description{
Get taxon keys used by GBIF based on species name or AphiaID.
}
\details{
The best way to ensure that the correct name is matched is to also
supply the authorship. In the case you supply only a vector of names, the
authorship can simply be pasted together.

The best option, however, is to supply a data frame that contains a column
called 'scientificName' and other columns (named as in parenthesis) with
additional taxa information:
\itemize{
\item authorship (scientificNameAuthorship) - strongly advised
\item taxa rank (taxonRank)
\item taxa phylum (phylum)
\item taxa kingdom (kingdom)
\item taxa class (class)
\item taxa order (order)
\item taxa family (family)
}

Such a table is easily produced if you first get the names from WoRMS. So, if
you have a list of AphiaIDs, you can simply supply it to the
\code{\link[worrms:wm_record]{worrms::wm_record()}} and use the returned data frame in this function.
}
\examples{
\dontrun{
get_gbif_keys("Leptuca thayeri")
}
}
