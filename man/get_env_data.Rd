% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_env_data.R
\name{get_env_data}
\alias{get_env_data}
\title{Download data from Bio-ORACLE version 3}
\usage{
get_env_data(
  datasets = NULL,
  future_scenarios = NULL,
  time_steps = NULL,
  latitude = NULL,
  longitude = NULL,
  variables = c("min", "mean", "max"),
  terrain_vars = NULL,
  outdir = "data/env/",
  skip_exist = TRUE,
  keep_raw = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{datasets}{an optional character vector of datasets}

\item{future_scenarios}{an optional vector of future scenarios}

\item{time_steps}{an optional named list of time steps (see details)}

\item{latitude}{an optional numeric vector with two values of the latitude
boundaries (lower, upper). If \code{NULL}, the whole dimension is used. If
supplied, longitude should also be given.}

\item{longitude}{an optional numeric vector with two values of the longitude
boundaries (lower, upper). If \code{NULL}, the whole dimension is used. If
supplied, latitude should also be given.}

\item{variables}{an optional vector of the variants that you want (e.g. mean,
min, max)}

\item{terrain_vars}{an optional vector of terrain variables}

\item{outdir}{the output directory}

\item{skip_exist}{if \code{TRUE} (default) the function will skip existent
files}

\item{keep_raw}{wether or not should the folder with raw files be kept
(recommended is FALSE to save space)}

\item{verbose}{print messages to track download}
}
\value{
saved files
}
\description{
Download data from Bio-ORACLE version 3
}
\details{
Environmental layers are downloaded from the Bio-ORACLE ERDDAP server
To see all available options, visit:
https://erddap.bio-oracle.org/erddap/griddap/index.html?page=1&itemsPerPage=1000

This function is basically a wrapper around the download_layers function of the
biooracler package which is still not on CRAN (soon will be), but will save
all files according to the project standard.
If you run the function and does not have biooracler installed, the function will print an
error with the GitHub address to install it.

The files are saved on the following structure
data
\_ env: environmental layers
\_ raw
\_ env_layers: raw files downloaded from Bio-ORACLE - deleted at the end, except if \code{keep_raw = TRUE}
\_ terrain: terrain layers (static)
\_ current: current period layers
\_ future: future period scenarios folders
\_ ssp1: future layers for SSP1 scenario
\_ ...: other scenarios

Time steps should be a named list, for each period a vector containing start and end periods (for a single step, use same value for both).
Datasets names should be the same one got from the ERDDAP list (see link above).
If a variable is not available for a period/depth but is for others, just supply it and the function will trow an error for those that it's unable to download but keep with the others.
See examples for details on how to set up the function.

Note: in the special cases that a dataset have "mean" in its name (e.g. PAR_mean), it will be renamed
and the _mean suppressed to avoid problems with other functions.
}
\examples{
\dontrun{
# List datasets to download ----
datasets <- c(
  "thetao_baseline_2000_2019_depthsurf",
  "so_baseline_2000_2019_depthsurf",
  "PAR_mean_baseline_2000_2020_depthsurf",
  "po4_baseline_2000_2018_depthsurf",
  "phyc_baseline_2000_2020_depthsurf",
  "sws_baseline_2000_2019_depthsurf",
  "siconc_baseline_2000_2020_depthsurf"
)

datasets <- c(datasets,
              gsub("depthsurf", "depthmean", datasets),
              gsub("depthsurf", "depthmax", datasets))

# List scenarios to download ----
future_scenarios <- c("ssp126", "ssp245", "ssp370", "ssp460", "ssp585")

# Define time steps ----
time_steps <- list(
  current = c("2010-01-01", "2010-01-01"),
  dec50 = c("2050-01-01", "2050-01-01"),
  dec100 = c("2090-01-01", "2090-01-01")
)

# Define variables to be download
# In general, available are: min, mean, max, range, ltmin, ltmax, and sd
vars <- c("min", "mean", "max")

# To define a certain latitude and longitude, you can do like this:
long <- c(-40, 40)
lat <- c(0, 50)
# But to download the whole world, just don't supply lon/lat to the function

get_env_data(datasets = datasets, future_scenarios = future_scenarios,
             time_steps = time_steps, variables = vars,
             terrain_vars = "bathymetry_mean")
             
# To visualize
library(terra)

thetao_current <- rast("data/env/current/thetao_baseline_depthmean_mean.tif")
plot(thetao_current)

thetao_ssp1_100 <- rast("data/env/future/ssp126/thetao_ssp126_depthmean_dec100_mean.tif")
plot(thetao_ssp1_100)

}
}
