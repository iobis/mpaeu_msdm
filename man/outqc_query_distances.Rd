% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/outqc_get_info.R
\name{outqc_query_distances}
\alias{outqc_query_distances}
\title{Query the distance from points and k neighbours}
\usage{
outqc_query_distances(
  pts,
  base = NULL,
  kdist = NULL,
  try_closest = TRUE,
  distfolder = "distances",
  returnid = TRUE,
  parallel = TRUE,
  mc_cores = NULL
)
}
\arguments{
\item{pts}{the points to be queried}

\item{base}{a base rast (of the same resolution as the one used when
calculating the distances), so the points can be indexed as cells. If NULL,
one of the distance layers from \code{distfolder} will be used instead.}

\item{kdist}{how much neighbours should be considered in the K nearest search}

\item{try_closest}{if you set \code{try_closest = TRUE} when getting the distances,
then you should also set it as \code{TRUE} here. Otherwise, the function will not be
able to find the valid cells that were computed.}

\item{distfolder}{the folder holding the distance layers produced with \code{\link[=outqc_get_distances]{outqc_get_distances()}}}

\item{parallel}{run query in parallel (recommended for larger datasets).
For now, will not work on Windows based systems.}

\item{mc_cores}{number of cores to use for parallel computation.}
}
\value{
\code{matrix} with each row corresponding to a point, and each collumn the distance to the nearest K(k) neighbour.
}
\description{
Extract from a set of points the distance to the K nearest neighbours based on
distance layers generated with \code{\link[=outqc_get_distances]{outqc_get_distances()}}.

If \code{try_closest} was set to \code{TRUE} in when getting the distances,
then it's possible that some non-valid (empty) cells were omited. In that case
the function will return NA for those records.
}
\examples{
\dontrun{
outqc_query_distances(sp_pts)
}
}
