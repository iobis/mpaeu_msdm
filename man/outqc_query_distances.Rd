% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/outqc_get_info.R
\name{outqc_query_distances}
\alias{outqc_query_distances}
\title{Query the distance from points and k neighbours}
\usage{
outqc_query_distances(
  pts,
  kdist = NULL,
  try_closest = TRUE,
  distfolder = "distances",
  mode = "zarr",
  returnid = TRUE
)
}
\arguments{
\item{pts}{the points to be queried}

\item{kdist}{how much neighbours should be considered in the K nearest search}

\item{try_closest}{if you set \code{try_closest = TRUE} when getting the distances,
then you should also set it as \code{TRUE} here. Otherwise, the function will not be
able to find the valid cells that were computed.}

\item{distfolder}{the folder holding the distance layers produced with \code{\link[=outqc_get_distances]{outqc_get_distances()}}}

\item{mode}{one of \code{zarr}, \code{xarray} or \code{tif}. Default is \code{zarr} which assumes that
after running \code{\link[=outqc_get_distances]{outqc_get_distances()}}, the function \code{\link[=outqc_dist_tozarr]{outqc_dist_tozarr()}} was used.}

\item{returnid}{if \code{TRUE} returns the ID}
}
\value{
\code{matrix} with each row corresponding to a point, and each collumn the distance to the nearest K(k) neighbour.
}
\description{
Extract from a set of points the distance to the K nearest neighbours based on
distance layers generated with \code{\link[=outqc_get_distances]{outqc_get_distances()}}.

If \code{try_closest} was set to \code{TRUE} in when getting the distances,
then it's possible that some non-valid (empty) cells were omited. In that case
the function will return NA for those records.

Note: for \code{mode = "zarr"}, which is the current default, you need to have
the \code{Rarr} package installed (through Bioconductor).

For mode \code{"xarray"}, you need Python and the \link{reticulate} package installed
and the \code{xarray} Python package. This mode is memory intensive and is not (always)
returning the right results. It was kept only for development purposes.
}
\examples{
\dontrun{
outqc_query_distances(sp_pts)
}
}
