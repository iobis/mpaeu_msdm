% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mp_prepare_blocks.R
\name{mp_prepare_blocks}
\alias{mp_prepare_blocks}
\title{Get cross-validation blocks}
\usage{
mp_prepare_blocks(
  sdm_data,
  method = "blockcv",
  block_types = c("spatial_grid", "spatial_lat", "random"),
  nfolds = 5,
  auto_range = FALSE,
  range = NULL,
  lat_blocks = 50,
  manual_shp = NULL,
  n_iterate = 50,
  retry_if_zero = FALSE,
  min_block_size = 0.2,
  max_block_size = 20,
  min_class = 0,
  verbose = TRUE
)
}
\arguments{
\item{sdm_data}{an object generated with mp_prepare_data containing the data}

\item{method}{either 'blockcv' to let the \link{blockCV} package generate the grid
or 'manual' to use a manual grid}

\item{block_types}{a vector of one or more of "spatial_grid", "spatial_lat"
and "random". See details for more information}

\item{nfolds}{number of folds}

\item{auto_range}{if \code{TRUE}, the function
\code{\link[blockCV:cv_spatial_autocor]{blockCV::cv_spatial_autocor()}} is used to search an ideal size for the
blocks. Ignored if method is 'manual'}

\item{range}{a range for the blocks. Ignored if method is 'manual' or
'auto_range' is set to \code{TRUE}}

\item{lat_blocks}{the number of latitudinal blocks, if block_types
'spatial_lat' is chosen}

\item{manual_shp}{the manual grid in sf format. Should be a named list
containing the grids for one or both of spatial_grid and spatial_lat}

\item{n_iterate}{number of iterations for random assigning the blocks into folds}

\item{retry_if_zero}{if this is set to \code{TRUE}, in case any of the folds
have a 0 parameter (either for training or testing presence/background),
the function will retry to assign folds, by randomly decreasing or
increasing the resolution of the original grid. The number of new trials is
5 by default, but you can change this value by supplying an integer instead of
\code{TRUE} for this parameter. You can also retry in case of a different value
(e.g. only 1 test point) by changing the \code{min_class} parameter}

\item{min_block_size}{if \code{retry_if_zero = TRUE}, then define the minimum size
the block can have}

\item{max_block_size}{if \code{retry_if_zero = TRUE}, then define the maximum size
the block can have}

\item{min_class}{if \code{retry_if_zero = TRUE}, the function will test if any of the folds
have a zero in any of the classes, but instead of 0 it's possible to set a different value,
for example 1 to have folds with at least 2 points in each class. Note that if you change this value for
something too large and your points are not well distributed, then the function will probably fail
in assigning the groups}

\item{verbose}{if \code{TRUE}, print messages}
}
\value{
an object of class sdm_dat containing the blocks
}
\description{
Get cross-validation blocks
}
\details{
Three types of cross-validation blocks are available:
\itemize{
\item spatial_grid: a spatial grid of blocks of size \code{range} is generated
\item spatial_lat: a spatial grid of latitudinal bins (= the number of \code{lat_blocks})
\item random: points are randomly assigned in the folds (i.e., not a spatial cross-validation)
}
}
\examples{
\dontrun{

}
}
